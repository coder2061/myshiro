[main]

#authc默认是/login.jsp
authc.loginUrl=/login
roles.unauthorizedUrl=/unauthorized
perms.unauthorizedUrl=/unauthorized
logout.redirectUrl=/login

[filters]
filter1=com.github.shiro.filter.MyOncePerRequestFilter
filter2=com.github.shiro.filter.MyAdviceFilter
filter3=com.github.shiro.filter.MyPathMatchingFilter
filter4=com.github.shiro.filter.MyAccessControlFilter
filter5=com.github.shiro.filter.FormLoginFilter
filter6=com.github.shiro.filter.AnyRolesFilter


[users]
rambo=123456,admin
jack=123456

[roles]
admin=user:*,menu:*

##支持通配符，拦截器声明顺序即匹配顺序，格式：url=拦截器[参数]，拦截器[参数]
## anon:支持匿名访问；authc：支持身份认证访问；role[admin]：支持角色认证访问；perms["user:create"]：支持权限认证访问
[urls]
/login=anon
/logout=anon
/unauthorized=anon
/static/**=anon
/index=authc
/user=authc,roles[admin]
## roles 通过参数指定访问时需要的角色，如“[admin]”，如果有多个使用“，”分割，且验证时是 hasAllRole 验证，即且的关系。
/role=authc,roles[admin]
/permission=authc,perms["user:create"]
/once=filter1
/advice=filter2
/path=filter3[admin,user]
/access=filter4
/formlogin=filter5
/anyrole=filter6[admin,user]